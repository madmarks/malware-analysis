import sys

# Copyright
# =========
# Copyright (C) 2015 Trustwave Holdings, Inc.
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program. If not, see <http://www.gnu.org/licenses/>
#
#
# Author: Eric Merritt
# Date: 2015-30-11
#
# =Synopsis
#
# This is a python script to decrypt exfiltration dump files from a
# FrameworkPoS variant
#
# Input: string or file
#
# Example: python decode_framework.py -f Perflib_Perfdata_f44.dat
#
# Example: python decode_framework.py cde8fee9cdd0dee9cdcdfce9cdfed2.c39992fd9e87ceebebf29dfe99fcd8.tt2.c8dcc4fecddec4d2c8c4dcc8c8cdd2fe.e6d2e8d2fecdd2cdcde8c4d2cdd2defcfce9e9d2cde8c4d2cdd2d2d2d2d2
#
# Output: stdout decoded lines


def decode_string(line):
    sub1 = "ILMxgTnvbzVtBiry3=X^KWQAG847oYdFZlR1NPe5j/mS0hODs.aU2qkCJ6H;wcu9fpE"
    sub2 = "^=/0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklm;no.pqrstuvwxyz"

    data = line.split('.')
    line = ''

    for hex_string in data:
        if hex_string == 'tt2' or hex_string == 'tt1' or hex_string == 'notice':
            line += hex_string + " "
            continue

        try:
            byte_array = bytearray(hex_string.decode('hex'))
        except TypeError:
            continue
        for byte in byte_array:
            try:
                line += str(sub2[sub1.index(chr(byte ^ 0xAA))])
            except ValueError:
                continue
        line += " "
    print line
# endef ############################

###### Main ########################
if '-f' in sys.argv:
    exfil_file = sys.argv[2]
    try:
        lines = open(exfil_file).read().splitlines()
    except IOError as e:
        print e
        sys.exit(1)
    print "[+] Reading in FrameworkPoS Exfil file: %s\n" % sys.argv[2] + \
        "=" * 90
    for line in lines:
        decode_string(line)
elif len(sys.argv) == 2:
    data = sys.argv[1]
    print "[+] Decoding command line exfil"
    decode_string(data)
else:
    print "[-] Usage: %s [-f file_name | encoded_line]" % sys.argv[0]
